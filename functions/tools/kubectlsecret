#!/bin/bash

set -eu

usage() {
    cat <<EOF
Usage:

 $ $(basename $0) [options] secret-name [kubectl-args]

Options:
 -h, --help         Show this help page.
 -n, --namespace    Specify namespace. Otherwise, it will default to kubectl's current context.
 -a, --as           Specify role impersonation. Otherwise, it will default to kubectl's current context.
 -c, --context      Specify context. Otherwise, it will default to kubectl's current context.
 -d, --decode       Decode secret data.
EOF
}

as=""
context=""
decode=0
namespace=""
rest=""

while test $# -gt 0; do
    case "$1" in
    -h | --help)
        shift; usage; exit 0 ;;
    -n | --namespace)
        shift; namespace="$1"; shift ;;
    -a | --as)
        shift; as="$1"; shift ;;
    -c | --context)
        shift; context="$1"; shift ;;
    -d | --decode)
        shift; decode=1 ;;
    *)
        rest="$rest $1"; shift ;;
    esac
done

args=""
if [[ -n "$context" ]]; then args="${args} --context ${context}"; fi
if [[ -n "$namespace" ]]; then args="${args} --namespace ${namespace}"; fi
if [[ -n "$as" ]]; then args="${args} --as ${as}"; fi

if [[ $decode == 1 ]]; then
    kubectl $args get secrets $rest -ojson | jq -r '.data | map_values(@base64d)'
else
    kubectl $args get secrets $rest
fi
